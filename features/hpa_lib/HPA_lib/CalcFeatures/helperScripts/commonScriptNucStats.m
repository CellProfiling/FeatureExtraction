
largest_object_intensity = double(nucstruct.channel(nucstruct.channel_largest_object));
number_moments = 9;
region_properties_features_names = {...
  'ConvexArea'...
  , 'Eccentricity'...
  , 'EquivDiameter'...
  , 'EulerNumber'...
  , 'MajorAxisLength'...
  , 'MinorAxisLength'...
  , 'Perimeter'...
  , 'Solidity'...
                   };
%feats = zeros(1, 0);
feats = nan(1, 3 + number_moments + length(region_properties_features_names));
%DPS 31,08,2016 - moved this outside the if statement so the code doesn't
%break when the channel is blank
moment_orders = 1 + (1:number_moments);
if optimize && nuclear_channel_blank
  %feats(:) = nan;
  %feats = [nan(1, length(feats) + length(region_properties_features_names))];
elseif ~isempty(nucobjs)
  feats(1) = max(nucobjs);
  feats(2) = sum(largest_object_intensity);
  feats(3) = mean(largest_object_intensity);
  %DPS 31,08,2016 - moved this outside the if statement so the code doesn't
  %break when the channel is blank
%   moment_orders = 1 + (1:number_moments);
  %feats(length(feats) + (1:number_moments)) = arrayfun(@(x)moment(largest_object_intensity, x), moment_orders);
  feats(3 + (1:number_moments)) = arrayfun(@(x)moment(largest_object_intensity, x), moment_orders);

  region_properties_features = regionprops(...
    nucstruct.channel_largest_object, ...
    region_properties_features_names);
  %region_properties_features_names = fieldnames(region_properties_features)'; 
  region_properties_features = cell2mat(struct2cell(region_properties_features))'; 
  %feats = [feats, region_properties_features]; 
  feats(3 + number_moments + 1:end) = region_properties_features; 
end

% Should be 20 features
names = [...
  {...
    'nucStats:number pixels'...
    , 'nucStats:total intensity'...
    , 'nucStats:mean intensity'...
    }...
  , arrayfun(@(x){num2str((x), 'nucStats:intensity moment %d')}, moment_orders)...
  , strcat('nucStats:regionprops ', region_properties_features_names)...
        ];
slfnames = repmat({''}, 1, length(feats));
